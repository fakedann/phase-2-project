{"ast":null,"code":"var _jsxFileName = \"/Users/danielescalona/Development/code/phase-2/phase-2-project/phase-2-project/phase-2-project/src/PopOv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Button from 'react-bootstrap/Button';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PopOv(_ref) {\n  _s();\n\n  let {\n    results,\n    callModal\n  } = _ref;\n  const [btnSrch, setBtn] = useState('');\n  const [btnStates, setStates] = useState([]); // console.log(btnStates)\n\n  const popover = /*#__PURE__*/_jsxDEV(Popover, {\n    id: \"popover-basic\",\n    children: [/*#__PURE__*/_jsxDEV(Popover.Header, {\n      as: \"h3\",\n      children: \"Tell us about your experience:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"myBtns\",\n        onClick: handleBtnClick,\n        variant: \"warning\",\n        children: \"Have Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"myBtns\",\n        onClick: handleBtnClick,\n        variant: \"warning\",\n        children: \"Will Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"myBtns\",\n        onClick: handleBtnClick,\n        children: \"Liked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"myBtns\",\n        onClick: handleBtnClick,\n        children: \"Disliked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBtnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"search\",\n          children: \"Enter Your Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: btnSrch,\n          placeholder: \"Daniel Escalona\",\n          onChange: e => setBtn(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this); //   if(results.type === 'card'){\n  //     const cardResult = <ListGroupItem><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n  //   <Button variant=\"success\">Add to database</Button>\n  //   </OverlayTrigger></ListGroupItem>\n  //   }else{\n  //     const tableResults = results.items.map( (tableObj, index) => <tr key={index}><td>{index}</td><td>{tableObj.author}</td><td>{tableObj.title}</td><td>{tableObj.publisher}</td><td>{tableObj.description}</td><td><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n  //   <Button variant=\"success\">Add to database</Button>\n  // </OverlayTrigger></td></tr>)\n  //   }\n\n\n  function handleBtnClick(e) {\n    if (e.target.className === \"myBtns\") {\n      e.target.className = \"btnClicked\";\n      setStates([...btnStates, e.target.innerText]);\n    } else {\n      e.target.className = \"myBtns\";\n      setStates(btnStates.filter(btnObj => btnObj !== e.target.innerText));\n    }\n\n    console.log(e.target.innerText);\n  }\n\n  function handleBtnSubmit(e) {\n    e.preventDefault();\n    fetch('https://evening-temple-49691.herokuapp.com/toys', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: btnSrch,\n        interactions: btnStates,\n        comments: ''\n      })\n    }).then(r => r.json()).then(r => callModal(true)); // fetch(`https://evening-temple-49691.herokuapp.com/toys/11`, {\n    //   method: \"DELETE\"\n    // })\n    //   .then( r => r.json())\n    //   .then( r => console.log(r))\n\n    console.log('submitted');\n  } //   results.type === 'card' ? <ListGroupItem><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n  //   <Button variant=\"success\">Add to database</Button>\n  //   </OverlayTrigger></ListGroupItem>: results.items.map( (tableObj, index) => <tr key={index}><td>{index}</td><td>{tableObj.author}</td><td>{tableObj.title}</td><td>{tableObj.publisher}</td><td>{tableObj.description}</td><td><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n  //   <Button variant=\"success\">Add to database</Button>\n  // </OverlayTrigger></td></tr>)\n\n\n  return 'hola';\n}\n\n_s(PopOv, \"2NIqEBoLsTrxmkrRDTBG1FiRKNA=\");\n\n_c = PopOv;\nexport default PopOv;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopOv\");","map":{"version":3,"names":["React","useState","Popover","OverlayTrigger","Button","ListGroupItem","PopOv","results","callModal","btnSrch","setBtn","btnStates","setStates","popover","handleBtnClick","handleBtnSubmit","e","target","value","className","innerText","filter","btnObj","console","log","preventDefault","fetch","method","headers","body","JSON","stringify","user","interactions","comments","then","r","json"],"sources":["/Users/danielescalona/Development/code/phase-2/phase-2-project/phase-2-project/phase-2-project/src/PopOv.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Popover from 'react-bootstrap/Popover'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Button from 'react-bootstrap/Button'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\n\nfunction PopOv({results, callModal}){\n\n  const [btnSrch, setBtn] = useState('')\n  const [btnStates, setStates] = useState([])\n  // console.log(btnStates)\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">Tell us about your experience:</Popover.Header>\n      <Popover.Body>\n        <button className=\"myBtns\" onClick={handleBtnClick} variant=\"warning\">Have Read</button>\n        <button className=\"myBtns\" onClick={handleBtnClick}  variant=\"warning\">Will Read</button>\n        <button className=\"myBtns\" onClick={handleBtnClick} >Liked</button>\n        <button className=\"myBtns\" onClick={handleBtnClick} >Disliked</button>\n        <form onSubmit={handleBtnSubmit}>\n            <label htmlFor=\"search\">Enter Your Name:</label>\n            <input type=\"text\" value={btnSrch} placeholder=\"Daniel Escalona\" onChange={e => setBtn(e.target.value)}/>\n            <button type=\"submit\">Submit</button>\n        </form>\n      </Popover.Body>\n    </Popover>\n  );\n\n//   if(results.type === 'card'){\n//     const cardResult = <ListGroupItem><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n//   <Button variant=\"success\">Add to database</Button>\n//   </OverlayTrigger></ListGroupItem>\n//   }else{\n//     const tableResults = results.items.map( (tableObj, index) => <tr key={index}><td>{index}</td><td>{tableObj.author}</td><td>{tableObj.title}</td><td>{tableObj.publisher}</td><td>{tableObj.description}</td><td><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n//   <Button variant=\"success\">Add to database</Button>\n// </OverlayTrigger></td></tr>)\n//   }\n\n  function handleBtnClick(e) {\n  \n    if(e.target.className === \"myBtns\"){\n      e.target.className = \"btnClicked\"\n      setStates([...btnStates, e.target.innerText])\n    }else{\n      e.target.className = \"myBtns\"\n      setStates( btnStates.filter( btnObj => btnObj !== e.target.innerText))\n    }\n    console.log(e.target.innerText)\n  }\n  \n  function handleBtnSubmit(e) {\n    e.preventDefault()\n    fetch('https://evening-temple-49691.herokuapp.com/toys', {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\" },\n      body: JSON.stringify({user: btnSrch, interactions: btnStates, comments: ''})\n    })\n      .then( r => r.json())\n      .then( r => callModal(true))\n    // fetch(`https://evening-temple-49691.herokuapp.com/toys/11`, {\n    //   method: \"DELETE\"\n    // })\n    //   .then( r => r.json())\n    //   .then( r => console.log(r))\n    console.log('submitted')\n  }\n\n//   results.type === 'card' ? <ListGroupItem><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n//   <Button variant=\"success\">Add to database</Button>\n//   </OverlayTrigger></ListGroupItem>: results.items.map( (tableObj, index) => <tr key={index}><td>{index}</td><td>{tableObj.author}</td><td>{tableObj.title}</td><td>{tableObj.publisher}</td><td>{tableObj.description}</td><td><OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\n//   <Button variant=\"success\">Add to database</Button>\n// </OverlayTrigger></td></tr>)\n  return 'hola'\n}\n\nexport default PopOv"],"mappings":"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"},"metadata":{},"sourceType":"module"}